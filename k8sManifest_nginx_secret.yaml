apiVersion: v1
kind: Secret
metadata:  
  name: reactapp-nginx-secret
data:
  API_BASE: <api_base>
  ConnectionStrings__Database: "<db-connection-string>"
  WeatherServiceBaseUrl: aHR0cDovL3JlYWN0YXBwLWJlMg==
  Logging__LogLevel__Default: RGVidWc=
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reactapp-be
spec:
  selector:
    matchLabels:
      app: reactapp-be
  replicas: 1
  template:
    metadata:
      labels:
        app: reactapp-be
    spec:
      containers:
      - name: reactapp-be
        image: nishantnepal/reactapp-be
        imagePullPolicy: Always
        resources:
          requests:
            memory: "250Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "250m"
        ports:
        - containerPort: 80 
        livenessProbe:
            httpGet: 
              path: /api/Ping
              port: 80
            initialDelaySeconds: 2
            timeoutSeconds: 5
            periodSeconds : 5 #how often to poll
            successThreshold: 1
            failureThreshold: 3        
        readinessProbe:
            httpGet: 
              path: /api/Ping/ready
              port: 80
            initialDelaySeconds: 2
            timeoutSeconds: 60
            periodSeconds : 5 #how often to poll
        envFrom:
            - secretRef:
                  name: reactapp-nginx-secret
                             

---
apiVersion: v1
kind: Service
metadata:
    name: reactapp-be
spec:
    type: ClusterIP
    ports:
    - port: 80 
      targetPort: 80
    selector:
        app: reactapp-be      

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reactapp-fe
spec:
  selector:
    matchLabels:
      app: reactapp-fe
  replicas: 1
  template:
    metadata:
      labels:
        app: reactapp-fe
    spec:
      containers:
      - name: reactapp-fe
        image: nishantnepal/reactapp-fe
        imagePullPolicy: Always
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "250m"
        ports:
        - containerPort: 80   
        env:
            - name: API_BASE
              valueFrom:
                    secretKeyRef:
                        key: API_BASE
                        name: reactapp-nginx-secret

---
apiVersion: v1
kind: Service
metadata:
    name: reactapp-fe
spec:
    type: ClusterIP
    ports:
    - port: 80 
      targetPort: 80
    selector:
        app: reactapp-fe     

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reactapp-be2
spec:
  selector:
    matchLabels:
      app: reactapp-be2
  replicas: 1
  template:
    metadata:
      labels:
        app: reactapp-be2
    spec:
      containers:
      - name: reactapp-fe
        image: nishantnepal/reactapp-be2
        imagePullPolicy: Always
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "250m"
        ports:
        - containerPort: 80                                               

---
apiVersion: v1
kind: Service
metadata:
    name: reactapp-be2
spec:
    type: ClusterIP
    ports:
    - port: 80 
      targetPort: 80
    selector:
        app: reactapp-be2     


---            
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: reactapp-fe-ingress-nginx
  #namespace: ingress-basic
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: "reactapp-nginx-secret.<public-ip>.nip.io"
      http:
       paths:              
        - backend:
            serviceName: reactapp-fe
            servicePort: 80
          path: /(.*)

---            
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: reactapp-be-ingress-nginx
  #namespace: ingress-basic
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: "reactapp-nginx-api-secret.<public-ip>.nip.io"
      http:
       paths:
        - path: /(.*)
          backend:
            serviceName: reactapp-be
            servicePort: 80                        

